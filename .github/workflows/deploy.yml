name: 🚀 Deploy Express App to Azure VM

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allow manual triggering of the workflow

jobs:
  deploy:
    name: Deploy to Azure VM
    runs-on: ubuntu-latest

    steps:
      - name: 🛎️ Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Deploy via SSH
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.AZURE_HOST }}
          username: ${{ secrets.AZURE_USER }}
          key: ${{ secrets.AZURE_SSH_KEY }}
          script: |
            set -e
            echo "Starting deployment..."

            # Navigate to your project directory
            cd ${{ secrets.PROJECT_DIR }}

            echo "Removing config.yaml from git tracking if it exists..."
            git rm --cached config.yaml 2>/dev/null || true

            echo "Pulling latest changes..."
            git pull origin main

            # Copy/update .env file (ensure .env is NOT in git)
            echo "⚙️ Updating environment variables..."
            cat > .env << EOF
            PORT=3000
            MONGODB_URI=${{ secrets.MONGODB_URI }}
            CORS_ORIGIN=${{ secrets.CORS_ORIGIN }}
            ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}
            ACCESS_TOKEN_EXPIRY=${{ secrets.ACCESS_TOKEN_EXPIRY }}
            REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}
            REFRESH_TOKEN_EXPIRY=${{ secrets.REFRESH_TOKEN_EXPIRY }}
            CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}
            CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}
            CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}
            CLOUDINARY_URL=${{ secrets.CLOUDINARY_URL }}
            ELASTICSEARCH_NODE=${{ secrets.ELASTICSEARCH_NODE }}
            OTEL_NODE=http://otel-collector:4318
            EOF

            # Update config.yaml with Better Stack token
            echo "⚙️ Updating OTEL config..."
            cat > config.yaml << EOF
            receivers:
              hostmetrics:
                collection_interval: 60s
                scrapers:
                  cpu:
                  memory:
                  disk:
                  network:
              otlp:
                protocols:
                  grpc:
                    endpoint: 0.0.0.0:4317
                  http:
                    endpoint: 0.0.0.0:4318
              prometheus:
                config:
                  scrape_configs:
                    - job_name: "otel-collector-metrics"
                      scrape_interval: 60s
                      static_configs:
                        - targets: ["0.0.0.0:8888"]

            exporters:
              otlphttp/betterstack:
                endpoint: "${{ secrets.BETTERSTACK_ENDPOINT }}"
                headers:
                  Authorization: "Bearer ${{ secrets.BETTERSTACK_TOKEN }}"

            processors:
              batch:

            service:
              pipelines:
                metrics/betterstack:
                  receivers: [hostmetrics, otlp, prometheus]
                  processors: [batch]
                  exporters: [otlphttp/betterstack]
                logs/betterstack:
                  receivers: [otlp]
                  processors: [batch]
                  exporters: [otlphttp/betterstack]
                traces/betterstack:
                  receivers: [otlp]
                  processors: [batch]
                  exporters: [otlphttp/betterstack]
            EOF

            echo "Installing dependencies..."
            docker compose down
            docker compose build --no-cache
            docker compose up -d

            echo "✅ Deployment complete!"
